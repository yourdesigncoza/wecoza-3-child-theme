# WeCoza 3 Child Theme - Augment Guidelines

# WordPress Integration Rules
- Strictly Follow WordPress coding standards- Follow naming convention: - - Shortcode follow naming convention: [wecoza_*]

# Frontend Development
- Use Bootstrap 5 components consistently

# Security Implementation
- Validate all user inputs
- Sanitize database queries
- Implement nonce verification
- Handle file uploads securely

# Form Handling
- Use Bootstrap validation classes
- Implement server-side validation
- Manage file uploads properly

# File Organization
- Follow naming conventions:
  * PHP: kebab-case for files
  * JS: camelCase for functions
  * CSS: BEM methodology

# MVC Architecture Guidelines

# Directory Structure
/wecoza-3-child-theme
  /app
    /Models
      /Learner
      /Agent
      /Client
      /Assessment
      /Portfolio
    /Views
      /learner
      /agent
      /client
      /admin
      /components
      /layouts
    /Controllers
      /LearnerController.php
      /AgentController.php
      /ClientController.php
      /AssessmentController.php
    /Services
      /Database
      /FileUpload
      /Authentication
      /Validation
  /config
  /public
    /assets
    /js
    /css
  /tests

# GIT Workflow
- Always use the `GIT MCP Server` with (GIT)

# Vertex 
<!-- vertex-ai-mcp-server tools:

- The project root is located at: /opt/lampp/htdocs/wecoza/wp-content/themes/wecoza_3_child_theme

- All relative paths should be resolved from this root directory.

- When using path-based tools like read_file_content, write_file_content, list_directory_contents, etc., 
   always use the full path starting with the project root:
   /opt/lampp/htdocs/wecoza/wp-content/themes/wecoza_3_child_theme/[rest-of-path]

- For codebase-retrieval and other tools that don't require full paths, 
   specify that searches should be limited to this directory.

- When executing terminal commands, always cd into the project root first:
   cd /opt/lampp/htdocs/wecoza/wp-content/themes/wecoza_3_child_theme && [your-command] -->